{
  "type": "error",
  "message": "Failed to make request: ",
  "data": "StatusCodeError: 403 - \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4/loose.dtd\\\">\\n<HTML><HEAD><META HTTP-EQUIV=\\\"Content-Type\\\" CONTENT=\\\"text/html; charset=iso-8859-1\\\">\\n<TITLE>ERROR: The request could not be satisfied</TITLE>\\n</HEAD><BODY>\\n<H1>ERROR</H1>\\n<H2>The request could not be satisfied.</H2>\\n<HR noshade size=\\\"1px\\\">\\nThis distribution is not configured to allow the HTTP request method that was used for this request. The distribution supports only cachable requests.\\n<BR clear=\\\"all\\\">\\n<HR noshade size=\\\"1px\\\">\\n<PRE>\\nGenerated by cloudfront (CloudFront)\\nRequest ID: wohNMaWKaKY1Bp-Y7NggrBnQ4xTYW8AFI3TopUhZBaKe8YCM3ygZHw==\\n</PRE>\\n<ADDRESS>\\n</ADDRESS>\\n</BODY></HTML>\"\n    at new StatusCodeError (/var/task/node_modules/request-promise/node_modules/request-promise-core/lib/errors.js:32:15)\n    at Request.plumbing.callback (/var/task/node_modules/request-promise/node_modules/request-promise-core/lib/plumbing.js:104:33)\n    at Request.RP$callback [as _callback] (/var/task/node_modules/request-promise/node_modules/request-promise-core/lib/plumbing.js:46:31)\n    at Request.self.callback (/var/task/node_modules/request/request.js:186:22)\n    at emitTwo (events.js:106:13)\n    at Request.emit (events.js:191:7)\n    at Request.<anonymous> (/var/task/node_modules/request/request.js:1163:10)\n    at emitOne (events.js:96:13)\n    at Request.emit (events.js:188:7)\n    at IncomingMessage.<anonymous> (/var/task/node_modules/request/request.js:1085:12)\n    at IncomingMessage.g (events.js:292:16)\n    at emitNone (events.js:91:20)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickDomainCallback (internal/process/next_tick.js:128:9)",
  "step": {
    "stepId": "90c29a40-3f9b-4a46-913c-0edab32eb874",
    "stepLabel": "Send HTTP response to Slack"
  }
}